generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Post Model
model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  published    Boolean        @default(false)
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PostCategory PostCategory[] // One to many relation 

  @@map("posts") // Asserting table name differeniating from model name
}

// User Model
model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String
  role     UserRole @default(user) // default role is user
  Profile  Profile? // One to one relation
  Post     Post[] // One to many relation

  @@map("users")
}

// Profile Model
model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])

  @@map("profiles")
}

// Catetgory Model
model Category {
  id           Int            @id @default(autoincrement())
  name         String
  PostCategory PostCategory[] // One to many relation

  @@map("categories")
}

// Intemediate table to resolve many to many relation of post and category table
model PostCategory {
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
  @@map("post_category")
}

enum UserRole {
  user
  admin
}
